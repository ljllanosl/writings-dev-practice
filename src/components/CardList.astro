---
import Card from "./Card.astro";
import cardData from "../data/cards.json";
---

<script>
  // Elementos del DOM
  const paginationNumbers = document.getElementById("pagination-numbers");
  const paginatedList = document.getElementById("wrapper");
  const listItems = paginatedList?.querySelectorAll(".card");
  const nextButton = document.getElementById("next-button");
  const prevButton = document.getElementById("prev-button");
  // Variables globales
  const paginationLimit = 9;
  const pageCount = Math.ceil((listItems?.length || 9) / paginationLimit);
  let currentPage:number;
  // AÃ±adir numeros de pagina
  const appendPageNumber = (index: number) => {
    const pageNumber = document.createElement("button");
    pageNumber.className = "pagination-number";
    pageNumber.innerHTML = index.toString();
    pageNumber.setAttribute("page-index", index.toString());
    pageNumber.setAttribute("aria-label", "Page " + index);
    paginationNumbers?.appendChild(pageNumber);
  };

  const getPaginationNumbers = () => {
    for (let i = 1; i <= pageCount; i++) {
      appendPageNumber(i);
    }
  };
  // Cargar funcion
  window.addEventListener("load", () => {
    getPaginationNumbers();
    setCurrentPage(1);
    // Asignar paginas a botones
    document.querySelectorAll(".pagination-number").forEach((button) => {
      const pageIndex = Number(button.getAttribute("page-index"));

      if (pageIndex) {
        button.addEventListener("click", () => {
          setCurrentPage(pageIndex);
        });
      }
    });
  });
  // Mostrar pagina activa
  const setCurrentPage = (pageNum: number) => {
    currentPage = pageNum;

    handleActivePageNumber();

    const prevRange = (pageNum - 1) * paginationLimit;
    const currRange = pageNum * paginationLimit;

    listItems?.forEach((item, index) => {
      item.classList.add("hidden");
      if (index >= prevRange && index < currRange) {
        item.classList.remove("hidden");
      }
    });
  };
  // Asignar pagina activa
  const handleActivePageNumber = () => {
    document.querySelectorAll(".pagination-number").forEach((button) => {
      button.classList.remove("active");

      const pageIndex = Number(button.getAttribute("page-index"));
      if(pageIndex == currentPage){
        button.classList.add("active");
      }
    })
  }
</script>
<section>
  <div id="wrapper" aria-live="polite">
    {
      cardData.map((card) => {
        return (
          <div class="card">
            <Card
              title={card.title}
              description={card.description}
              category={card.category}
              imageUrl={card.imageUrl}
              imageAlt={card.imageAlt}
            />
          </div>
        );
      })
    }
  </div>
  <nav class="pagination-container">
    <button
      class="pagination-button"
      id="prev-button"
      title="Previous"
      aria-label="Previous"
    >
      Previous
    </button>
    <div id="pagination-numbers"></div>
    <button
      class="pagination-button"
      id="next-button"
      title="Next"
      aria-label="Next"
    >
      Next
    </button>
  </nav>
</section>
<style>
  .card {
    background-color: var(--white-color);
    width: 390px;
    height: 439px;
    border-radius: 15px;
    color: var(--card-text-color);
    padding: 20px;
    box-sizing: border-box;
  }
  #wrapper {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 30px;
    margin: 0 auto;
  }
  #wrapper::after {
    content: "";
    width: 390px;
  }
  .pagination-container {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 100px;
  }
  :global(.pagination-number),
  .pagination-button {
    font-size: 1.2em;
    font-family: "Recursive", sans-serif;
    font-style: italic;
    background-color: transparent;
    color: var(--category-color);
    border: none;
    cursor: pointer;
    padding: 15px 10px;
    margin: 0 10px;
    text-align: left;
  }
  :global(.pagination-number:hover),
  :global(.pagination-number:not(.disabled):hover),
  .pagination-button:hover {
    color: var(--title-color);
  }
  :global(.pagination-number.active) {
    color: var(--title-color);
    border-top: 2px solid var(--title-color);
  }
  section {
    margin: 100px auto;
    max-width: 1230px;
  }
  .hidden {
    display: none;
  }
</style>
